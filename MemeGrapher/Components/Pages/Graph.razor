@page "/graph"
@rendermode InteractiveServer

<PageTitle>Graph</PageTitle>

<h1>Graph</h1>

<div class="grid">
    @for (int i = 0; i < 400; i++)
    {
        var index = i;
            <div class="@SetClass(index)"@onclick="@(e => ChangeColor(index))" style="background-color: @(cellColors[index])"></div>
        }
</div>

<style>
    .grid {
        display: grid;
        grid-template-columns: repeat(20, 20px);
        grid-template-rows: repeat(20, 20px);
        width: 400px;  /* Adjust as needed */
        height: 400px;  /* Adjust as needed */
        border: 1px solid black;
    }
    .grid div {
        border: 1px solid black;
        box-sizing: border-box;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 10px;
    }
    .grid .middle-x {
        border-left: 3px solid black;
    }
    .grid .middle-y {
        border-top: 3px solid black;
    }
    .grid .center {
        border-left: 3px solid black;
        border-top: 3px solid black;
    }
    
</style>

@code {
    private string[] cellColors;

    protected override void OnInitialized()
    {
        cellColors = new string[400];
        for (int i = 0; i < cellColors.Length; i++)
        {
            cellColors[i] = "white";
        }
        
    }
    
    private void ChangeColor(int index)
    {
        cellColors[index] = cellColors[index] == "red" ? "white" : "red";
    }

    private string SetClass(int index)
    {
        int row = index / 20;
        int col = index % 20;
        if (row == 10 && col == 10)
        {
            return "center";
        }
        if (row == 10)
        {
            return "middle-y";
        }
        if (col == 10)
        {
            return "middle-x";
        }

        return string.Empty;
    }
}